-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from src/Language/Turtle/Frontend/Parser.y
-----------------------------------------------------------------------------


terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_program -> Program                          (0)
	Program -> Statements                              (1)
	Block -> indent StatementsNonEmpty unindent        (2)
	BlockOrSingleStatement -> Block                    (3)
	BlockOrSingleStatement -> Statement newline        (4)
	Statements -> Statement                            (5)
	Statements -> Statement newline Statements         (6)
	StatementsNonEmpty -> Statement                    (7)
	StatementsNonEmpty -> Statement newline StatementsNonEmpty   (8)
	Statement -> Identifier '=' Expression             (9)
	Statement -> if Expression ':' BlockOrSingleStatement else ':' BlockOrSingleStatement   (10)
	Statement -> Expression                            (11)
	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' Type ':' BlockOrSingleStatement   (12)
	Statement -> CaseSt                                (13)
	CaseSt -> match Expression ':' indent Cases unindent   (14)
	Cases -> Case                                      (15)
	Cases -> Case Cases                                (16)
	Case -> case Pattern ':' BlockOrSingleStatement    (17)
	Pattern -> num                                     (18)
	Pattern -> Identifier                              (19)
	Expression -> Literal                              (20)
	Expression -> Identifier                           (21)
	Expression -> '(' Expression ')'                   (22)
	Expression -> Expression paren_enclosed__'('__')'__Expression__   (23)
	Expression -> list_like__Expression__              (24)
	Literal -> num                                     (25)
	Literal -> stringlit                               (26)
	IdentifierWithType -> Identifier ':' Type          (27)
	SimpleType -> TypeIdent                            (28)
	Type -> SimpleType                                 (29)
	Type -> FunctionParams '->' Type                   (30)
	Type -> Type '|' Type                              (31)
	Type -> SimpleType SimpleType                      (32)
	Type -> SimpleType '(' Type ')'                    (33)
	FunctionParams -> paren_enclosed__'('__')'__Type__   (34)
	Identifier -> id                                   (35)
	TypeIdent -> Id                                    (36)
	list_like__Expression__ -> paren_enclosed__'['__']'__Expression__   (37)
	paren_enclosed__'('__')'__Expression__ -> '(' ')'   (38)
	paren_enclosed__'('__')'__Expression__ -> '(' comma_separated__Expression__ ')'   (39)
	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' ')'   (40)
	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' comma_separated__IdentifierWithType__ ')'   (41)
	paren_enclosed__'('__')'__Type__ -> '(' ')'        (42)
	paren_enclosed__'('__')'__Type__ -> '(' comma_separated__Type__ ')'   (43)
	comma_separated__Expression__ -> Expression ',' comma_separated__Expression__   (44)
	comma_separated__Expression__ -> Expression        (45)
	comma_separated__IdentifierWithType__ -> IdentifierWithType ',' comma_separated__IdentifierWithType__   (46)
	comma_separated__IdentifierWithType__ -> IdentifierWithType   (47)
	comma_separated__Type__ -> Type ',' comma_separated__Type__   (48)
	comma_separated__Type__ -> Type                    (49)
	paren_enclosed__'['__']'__Expression__ -> '[' ']'   (50)
	paren_enclosed__'['__']'__Expression__ -> '[' comma_separated__Expression__ ']'   (51)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { Ranged { value = Identifier _ } }
	Id             { Ranged { value = TUpperIdentifier _ } }
	stringlit      { Ranged { value = TStringLit _ } }
	num            { Ranged { value = TNumber num } }
	'='            { Ranged { value = TAssign } }
	':'            { Ranged { value = TColon } }
	','            { Ranged { value = TComma } }
	'('            { Ranged { value = TParenL } }
	')'            { Ranged { value = TParenR } }
	'['            { Ranged { value = TBracketL } }
	']'            { Ranged { value = TBracketR } }
	'->'           { Ranged { value = TArrow } }
	'|'            { Ranged { value = TPipe } }
	if             { Ranged { value = TIf } }
	else           { Ranged { value = TElse } }
	match          { Ranged { value = TMatch } }
	case           { Ranged { value = TCase } }
	eof            { Ranged { value = EOF } }
	fun            { Ranged { value = TFun } }
	indent         { Ranged { value = TIndent _ } }
	unindent       { Ranged { value = TUnindent } }
	newline        { Ranged { value = TNewline } }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_program  rule  0
	Program         rule  1
	Block           rule  2
	BlockOrSingleStatement rules 3, 4
	Statements      rules 5, 6
	StatementsNonEmpty rules 7, 8
	Statement       rules 9, 10, 11, 12, 13
	CaseSt          rule  14
	Cases           rules 15, 16
	Case            rule  17
	Pattern         rules 18, 19
	Expression      rules 20, 21, 22, 23, 24
	Literal         rules 25, 26
	IdentifierWithType rule  27
	SimpleType      rule  28
	Type            rules 29, 30, 31, 32, 33
	FunctionParams  rule  34
	Identifier      rule  35
	TypeIdent       rule  36
	list_like__Expression__ rule  37
	paren_enclosed__'('__')'__Expression__ rules 38, 39
	paren_enclosed__'('__')'__IdentifierWithType__ rules 40, 41
	paren_enclosed__'('__')'__Type__ rules 42, 43
	comma_separated__Expression__ rules 44, 45
	comma_separated__IdentifierWithType__ rules 46, 47
	comma_separated__Type__ rules 48, 49
	paren_enclosed__'['__']'__Expression__ rules 50, 51

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_program -> . Program                         (rule 0)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17

	Program        goto state 18
	Statements     goto state 2
	Statement      goto state 3
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 1

	Program -> . Statements                             (rule 1)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17

	Statements     goto state 2
	Statement      goto state 3
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 2

	Program -> Statements .                             (rule 1)

	%eof           reduce using rule 1


State 3

	Statements -> Statement .                           (rule 5)
	Statements -> Statement . newline Statements        (rule 6)

	newline        shift, and enter state 30
	%eof           reduce using rule 5


State 4

	Statement -> CaseSt .                               (rule 13)

	unindent       reduce using rule 13
	newline        reduce using rule 13
	%eof           reduce using rule 13


State 5

	Statement -> Expression .                           (rule 11)
	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)

	'('            shift, and enter state 29
	unindent       reduce using rule 11
	newline        reduce using rule 11
	%eof           reduce using rule 11

	paren_enclosed__'('__')'__Expression__goto state 28

State 6

	Expression -> Literal .                             (rule 20)

	':'            reduce using rule 20
	','            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	']'            reduce using rule 20
	unindent       reduce using rule 20
	newline        reduce using rule 20
	%eof           reduce using rule 20


State 7

	Statement -> Identifier . '=' Expression            (rule 9)
	Expression -> Identifier .                          (rule 21)

	'='            shift, and enter state 27
	'('            reduce using rule 21
	unindent       reduce using rule 21
	newline        reduce using rule 21
	%eof           reduce using rule 21


State 8

	Expression -> list_like__Expression__ .             (rule 24)

	':'            reduce using rule 24
	','            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	']'            reduce using rule 24
	unindent       reduce using rule 24
	newline        reduce using rule 24
	%eof           reduce using rule 24


State 9

	list_like__Expression__ -> paren_enclosed__'['__']'__Expression__ .    (rule 37)

	':'            reduce using rule 37
	','            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	']'            reduce using rule 37
	unindent       reduce using rule 37
	newline        reduce using rule 37
	%eof           reduce using rule 37


State 10

	Identifier -> id .                                  (rule 35)

	'='            reduce using rule 35
	':'            reduce using rule 35
	','            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	']'            reduce using rule 35
	unindent       reduce using rule 35
	newline        reduce using rule 35
	%eof           reduce using rule 35


State 11

	Literal -> stringlit .                              (rule 26)

	':'            reduce using rule 26
	','            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	']'            reduce using rule 26
	unindent       reduce using rule 26
	newline        reduce using rule 26
	%eof           reduce using rule 26


State 12

	Literal -> num .                                    (rule 25)

	':'            reduce using rule 25
	','            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	']'            reduce using rule 25
	unindent       reduce using rule 25
	newline        reduce using rule 25
	%eof           reduce using rule 25


State 13

	Expression -> '(' . Expression ')'                  (rule 22)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14

	Expression     goto state 26
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 14

	paren_enclosed__'['__']'__Expression__ -> '[' . ']'    (rule 50)
	paren_enclosed__'['__']'__Expression__ -> '[' . comma_separated__Expression__ ']'    (rule 51)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	']'            shift, and enter state 25

	Expression     goto state 23
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	comma_separated__Expression__goto state 24
	paren_enclosed__'['__']'__Expression__goto state 9

State 15

	Statement -> if . Expression ':' BlockOrSingleStatement else ':' BlockOrSingleStatement    (rule 10)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14

	Expression     goto state 22
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 16

	CaseSt -> match . Expression ':' indent Cases unindent    (rule 14)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14

	Expression     goto state 20
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 17

	Statement -> fun . Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' Type ':' BlockOrSingleStatement    (rule 12)

	id             shift, and enter state 10

	Identifier     goto state 19

State 18

	%start_program -> Program .                         (rule 0)

	%eof           accept


State 19

	Statement -> fun Identifier . paren_enclosed__'('__')'__IdentifierWithType__ '->' Type ':' BlockOrSingleStatement    (rule 12)

	'('            shift, and enter state 41

	paren_enclosed__'('__')'__IdentifierWithType__goto state 40

State 20

	CaseSt -> match Expression . ':' indent Cases unindent    (rule 14)
	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)

	':'            shift, and enter state 39
	'('            shift, and enter state 29

	paren_enclosed__'('__')'__Expression__goto state 28

State 21

	Expression -> Identifier .                          (rule 21)

	':'            reduce using rule 21
	','            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	unindent       reduce using rule 21
	newline        reduce using rule 21
	%eof           reduce using rule 21


State 22

	Statement -> if Expression . ':' BlockOrSingleStatement else ':' BlockOrSingleStatement    (rule 10)
	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)

	':'            shift, and enter state 38
	'('            shift, and enter state 29

	paren_enclosed__'('__')'__Expression__goto state 28

State 23

	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)
	comma_separated__Expression__ -> Expression . ',' comma_separated__Expression__    (rule 44)
	comma_separated__Expression__ -> Expression .       (rule 45)

	','            shift, and enter state 37
	'('            shift, and enter state 29
	')'            reduce using rule 45
	']'            reduce using rule 45

	paren_enclosed__'('__')'__Expression__goto state 28

State 24

	paren_enclosed__'['__']'__Expression__ -> '[' comma_separated__Expression__ . ']'    (rule 51)

	']'            shift, and enter state 36


State 25

	paren_enclosed__'['__']'__Expression__ -> '[' ']' .    (rule 50)

	':'            reduce using rule 50
	','            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	unindent       reduce using rule 50
	newline        reduce using rule 50
	%eof           reduce using rule 50


State 26

	Expression -> '(' Expression . ')'                  (rule 22)
	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)

	'('            shift, and enter state 29
	')'            shift, and enter state 35

	paren_enclosed__'('__')'__Expression__goto state 28

State 27

	Statement -> Identifier '=' . Expression            (rule 9)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14

	Expression     goto state 34
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 28

	Expression -> Expression paren_enclosed__'('__')'__Expression__ .    (rule 23)

	':'            reduce using rule 23
	','            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	']'            reduce using rule 23
	unindent       reduce using rule 23
	newline        reduce using rule 23
	%eof           reduce using rule 23


State 29

	paren_enclosed__'('__')'__Expression__ -> '(' . ')'    (rule 38)
	paren_enclosed__'('__')'__Expression__ -> '(' . comma_separated__Expression__ ')'    (rule 39)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	')'            shift, and enter state 33
	'['            shift, and enter state 14

	Expression     goto state 23
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	comma_separated__Expression__goto state 32
	paren_enclosed__'['__']'__Expression__goto state 9

State 30

	Statements -> Statement newline . Statements        (rule 6)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17

	Statements     goto state 31
	Statement      goto state 3
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 31

	Statements -> Statement newline Statements .        (rule 6)

	%eof           reduce using rule 6


State 32

	paren_enclosed__'('__')'__Expression__ -> '(' comma_separated__Expression__ . ')'    (rule 39)

	')'            shift, and enter state 53


State 33

	paren_enclosed__'('__')'__Expression__ -> '(' ')' .    (rule 38)

	':'            reduce using rule 38
	','            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	']'            reduce using rule 38
	unindent       reduce using rule 38
	newline        reduce using rule 38
	%eof           reduce using rule 38


State 34

	Statement -> Identifier '=' Expression .            (rule 9)
	Expression -> Expression . paren_enclosed__'('__')'__Expression__    (rule 23)

	'('            shift, and enter state 29
	unindent       reduce using rule 9
	newline        reduce using rule 9
	%eof           reduce using rule 9

	paren_enclosed__'('__')'__Expression__goto state 28

State 35

	Expression -> '(' Expression ')' .                  (rule 22)

	':'            reduce using rule 22
	','            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	unindent       reduce using rule 22
	newline        reduce using rule 22
	%eof           reduce using rule 22


State 36

	paren_enclosed__'['__']'__Expression__ -> '[' comma_separated__Expression__ ']' .    (rule 51)

	':'            reduce using rule 51
	','            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	']'            reduce using rule 51
	unindent       reduce using rule 51
	newline        reduce using rule 51
	%eof           reduce using rule 51


State 37

	comma_separated__Expression__ -> Expression ',' . comma_separated__Expression__    (rule 44)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14

	Expression     goto state 23
	Literal        goto state 6
	Identifier     goto state 21
	list_like__Expression__goto state 8
	comma_separated__Expression__goto state 52
	paren_enclosed__'['__']'__Expression__goto state 9

State 38

	Statement -> if Expression ':' . BlockOrSingleStatement else ':' BlockOrSingleStatement    (rule 10)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17
	indent         shift, and enter state 51

	Block          goto state 48
	BlockOrSingleStatementgoto state 49
	Statement      goto state 50
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 39

	CaseSt -> match Expression ':' . indent Cases unindent    (rule 14)

	indent         shift, and enter state 47


State 40

	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ . '->' Type ':' BlockOrSingleStatement    (rule 12)

	'->'           shift, and enter state 46


State 41

	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' . ')'    (rule 40)
	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' . comma_separated__IdentifierWithType__ ')'    (rule 41)

	id             shift, and enter state 10
	')'            shift, and enter state 45

	IdentifierWithTypegoto state 42
	Identifier     goto state 43
	comma_separated__IdentifierWithType__goto state 44

State 42

	comma_separated__IdentifierWithType__ -> IdentifierWithType . ',' comma_separated__IdentifierWithType__    (rule 46)
	comma_separated__IdentifierWithType__ -> IdentifierWithType .    (rule 47)

	','            shift, and enter state 70
	')'            reduce using rule 47


State 43

	IdentifierWithType -> Identifier . ':' Type         (rule 27)

	':'            shift, and enter state 69


State 44

	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' comma_separated__IdentifierWithType__ . ')'    (rule 41)

	')'            shift, and enter state 68


State 45

	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' ')' .    (rule 40)

	'->'           reduce using rule 40


State 46

	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' . Type ':' BlockOrSingleStatement    (rule 12)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 62
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65

State 47

	CaseSt -> match Expression ':' indent . Cases unindent    (rule 14)

	case           shift, and enter state 60

	Cases          goto state 58
	Case           goto state 59

State 48

	BlockOrSingleStatement -> Block .                   (rule 3)

	else           reduce using rule 3
	case           reduce using rule 3
	unindent       reduce using rule 3
	newline        reduce using rule 3
	%eof           reduce using rule 3


State 49

	Statement -> if Expression ':' BlockOrSingleStatement . else ':' BlockOrSingleStatement    (rule 10)

	else           shift, and enter state 57


State 50

	BlockOrSingleStatement -> Statement . newline       (rule 4)

	newline        shift, and enter state 56


State 51

	Block -> indent . StatementsNonEmpty unindent       (rule 2)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17

	StatementsNonEmptygoto state 54
	Statement      goto state 55
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 52

	comma_separated__Expression__ -> Expression ',' comma_separated__Expression__ .    (rule 44)

	')'            reduce using rule 44
	']'            reduce using rule 44


State 53

	paren_enclosed__'('__')'__Expression__ -> '(' comma_separated__Expression__ ')' .    (rule 39)

	':'            reduce using rule 39
	','            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	']'            reduce using rule 39
	unindent       reduce using rule 39
	newline        reduce using rule 39
	%eof           reduce using rule 39


State 54

	Block -> indent StatementsNonEmpty . unindent       (rule 2)

	unindent       shift, and enter state 88


State 55

	StatementsNonEmpty -> Statement .                   (rule 7)
	StatementsNonEmpty -> Statement . newline StatementsNonEmpty    (rule 8)

	unindent       reduce using rule 7
	newline        shift, and enter state 87


State 56

	BlockOrSingleStatement -> Statement newline .       (rule 4)

	else           reduce using rule 4
	case           reduce using rule 4
	unindent       reduce using rule 4
	newline        reduce using rule 4
	%eof           reduce using rule 4


State 57

	Statement -> if Expression ':' BlockOrSingleStatement else . ':' BlockOrSingleStatement    (rule 10)

	':'            shift, and enter state 86


State 58

	CaseSt -> match Expression ':' indent Cases . unindent    (rule 14)

	unindent       shift, and enter state 85


State 59

	Cases -> Case .                                     (rule 15)
	Cases -> Case . Cases                               (rule 16)

	case           shift, and enter state 60
	unindent       reduce using rule 15

	Cases          goto state 84
	Case           goto state 59

State 60

	Case -> case . Pattern ':' BlockOrSingleStatement    (rule 17)

	id             shift, and enter state 10
	num            shift, and enter state 83

	Pattern        goto state 81
	Identifier     goto state 82

State 61

	Type -> SimpleType .                                (rule 29)
	Type -> SimpleType . SimpleType                     (rule 32)
	Type -> SimpleType . '(' Type ')'                   (rule 33)

	Id             shift, and enter state 66
	':'            reduce using rule 29
	','            reduce using rule 29
	'('            shift, and enter state 80
	')'            reduce using rule 29
	'|'            reduce using rule 29

	SimpleType     goto state 79
	TypeIdent      goto state 64

State 62

	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' Type . ':' BlockOrSingleStatement    (rule 12)
	Type -> Type . '|' Type                             (rule 31)

	':'            shift, and enter state 77
	'|'            shift, and enter state 78


State 63

	Type -> FunctionParams . '->' Type                  (rule 30)

	'->'           shift, and enter state 76


State 64

	SimpleType -> TypeIdent .                           (rule 28)

	Id             reduce using rule 28
	':'            reduce using rule 28
	','            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'|'            reduce using rule 28


State 65

	FunctionParams -> paren_enclosed__'('__')'__Type__ .    (rule 34)

	'->'           reduce using rule 34


State 66

	TypeIdent -> Id .                                   (rule 36)

	Id             reduce using rule 36
	':'            reduce using rule 36
	','            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'|'            reduce using rule 36


State 67

	paren_enclosed__'('__')'__Type__ -> '(' . ')'       (rule 42)
	paren_enclosed__'('__')'__Type__ -> '(' . comma_separated__Type__ ')'    (rule 43)

	Id             shift, and enter state 66
	'('            shift, and enter state 67
	')'            shift, and enter state 75

	SimpleType     goto state 61
	Type           goto state 73
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65
	comma_separated__Type__goto state 74

State 68

	paren_enclosed__'('__')'__IdentifierWithType__ -> '(' comma_separated__IdentifierWithType__ ')' .    (rule 41)

	'->'           reduce using rule 41


State 69

	IdentifierWithType -> Identifier ':' . Type         (rule 27)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 72
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65

State 70

	comma_separated__IdentifierWithType__ -> IdentifierWithType ',' . comma_separated__IdentifierWithType__    (rule 46)

	id             shift, and enter state 10

	IdentifierWithTypegoto state 42
	Identifier     goto state 43
	comma_separated__IdentifierWithType__goto state 71

State 71

	comma_separated__IdentifierWithType__ -> IdentifierWithType ',' comma_separated__IdentifierWithType__ .    (rule 46)

	')'            reduce using rule 46


State 72

	IdentifierWithType -> Identifier ':' Type .         (rule 27)
	Type -> Type . '|' Type                             (rule 31)

	','            reduce using rule 27
	')'            reduce using rule 27
	'|'            shift, and enter state 78


State 73

	Type -> Type . '|' Type                             (rule 31)
	comma_separated__Type__ -> Type . ',' comma_separated__Type__    (rule 48)
	comma_separated__Type__ -> Type .                   (rule 49)

	','            shift, and enter state 97
	')'            reduce using rule 49
	'|'            shift, and enter state 78


State 74

	paren_enclosed__'('__')'__Type__ -> '(' comma_separated__Type__ . ')'    (rule 43)

	')'            shift, and enter state 96


State 75

	paren_enclosed__'('__')'__Type__ -> '(' ')' .       (rule 42)

	'->'           reduce using rule 42


State 76

	Type -> FunctionParams '->' . Type                  (rule 30)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 95
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65

State 77

	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' Type ':' . BlockOrSingleStatement    (rule 12)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17
	indent         shift, and enter state 51

	Block          goto state 48
	BlockOrSingleStatementgoto state 94
	Statement      goto state 50
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 78

	Type -> Type '|' . Type                             (rule 31)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 93
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65

State 79

	Type -> SimpleType SimpleType .                     (rule 32)

	':'            reduce using rule 32
	','            reduce using rule 32
	')'            reduce using rule 32
	'|'            reduce using rule 32


State 80

	Type -> SimpleType '(' . Type ')'                   (rule 33)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 92
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65

State 81

	Case -> case Pattern . ':' BlockOrSingleStatement    (rule 17)

	':'            shift, and enter state 91


State 82

	Pattern -> Identifier .                             (rule 19)

	':'            reduce using rule 19


State 83

	Pattern -> num .                                    (rule 18)

	':'            reduce using rule 18


State 84

	Cases -> Case Cases .                               (rule 16)

	unindent       reduce using rule 16


State 85

	CaseSt -> match Expression ':' indent Cases unindent .    (rule 14)

	unindent       reduce using rule 14
	newline        reduce using rule 14
	%eof           reduce using rule 14


State 86

	Statement -> if Expression ':' BlockOrSingleStatement else ':' . BlockOrSingleStatement    (rule 10)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17
	indent         shift, and enter state 51

	Block          goto state 48
	BlockOrSingleStatementgoto state 90
	Statement      goto state 50
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 87

	StatementsNonEmpty -> Statement newline . StatementsNonEmpty    (rule 8)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17

	StatementsNonEmptygoto state 89
	Statement      goto state 55
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 88

	Block -> indent StatementsNonEmpty unindent .       (rule 2)

	else           reduce using rule 2
	case           reduce using rule 2
	unindent       reduce using rule 2
	newline        reduce using rule 2
	%eof           reduce using rule 2


State 89

	StatementsNonEmpty -> Statement newline StatementsNonEmpty .    (rule 8)

	unindent       reduce using rule 8


State 90

	Statement -> if Expression ':' BlockOrSingleStatement else ':' BlockOrSingleStatement .    (rule 10)

	unindent       reduce using rule 10
	newline        reduce using rule 10
	%eof           reduce using rule 10


State 91

	Case -> case Pattern ':' . BlockOrSingleStatement    (rule 17)

	id             shift, and enter state 10
	stringlit      shift, and enter state 11
	num            shift, and enter state 12
	'('            shift, and enter state 13
	'['            shift, and enter state 14
	if             shift, and enter state 15
	match          shift, and enter state 16
	fun            shift, and enter state 17
	indent         shift, and enter state 51

	Block          goto state 48
	BlockOrSingleStatementgoto state 100
	Statement      goto state 50
	CaseSt         goto state 4
	Expression     goto state 5
	Literal        goto state 6
	Identifier     goto state 7
	list_like__Expression__goto state 8
	paren_enclosed__'['__']'__Expression__goto state 9

State 92

	Type -> Type . '|' Type                             (rule 31)
	Type -> SimpleType '(' Type . ')'                   (rule 33)

	')'            shift, and enter state 99
	'|'            shift, and enter state 78


State 93

	Type -> Type . '|' Type                             (rule 31)
	Type -> Type '|' Type .                             (rule 31)

	':'            reduce using rule 31
	','            reduce using rule 31
	')'            reduce using rule 31
	'|'            reduce using rule 31


State 94

	Statement -> fun Identifier paren_enclosed__'('__')'__IdentifierWithType__ '->' Type ':' BlockOrSingleStatement .    (rule 12)

	unindent       reduce using rule 12
	newline        reduce using rule 12
	%eof           reduce using rule 12


State 95

	Type -> FunctionParams '->' Type .                  (rule 30)
	Type -> Type . '|' Type                             (rule 31)

	':'            reduce using rule 30
	','            reduce using rule 30
	')'            reduce using rule 30
	'|'            reduce using rule 30


State 96

	paren_enclosed__'('__')'__Type__ -> '(' comma_separated__Type__ ')' .    (rule 43)

	'->'           reduce using rule 43


State 97

	comma_separated__Type__ -> Type ',' . comma_separated__Type__    (rule 48)

	Id             shift, and enter state 66
	'('            shift, and enter state 67

	SimpleType     goto state 61
	Type           goto state 73
	FunctionParams goto state 63
	TypeIdent      goto state 64
	paren_enclosed__'('__')'__Type__goto state 65
	comma_separated__Type__goto state 98

State 98

	comma_separated__Type__ -> Type ',' comma_separated__Type__ .    (rule 48)

	')'            reduce using rule 48


State 99

	Type -> SimpleType '(' Type ')' .                   (rule 33)

	':'            reduce using rule 33
	','            reduce using rule 33
	')'            reduce using rule 33
	'|'            reduce using rule 33


State 100

	Case -> case Pattern ':' BlockOrSingleStatement .    (rule 17)

	case           reduce using rule 17
	unindent       reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 52
Number of terminals: 22
Number of non-terminals: 27
Number of states: 101
